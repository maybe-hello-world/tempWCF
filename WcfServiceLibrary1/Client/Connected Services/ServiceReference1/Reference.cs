//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Client.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseQuestion", Namespace="http://schemas.datacontract.org/2004/07/WcfServiceLibrary1")]
    [System.SerializableAttribute()]
    public partial class BaseQuestion : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseContext", Namespace="http://schemas.datacontract.org/2004/07/WcfServiceLibrary1")]
    [System.SerializableAttribute()]
    public partial class BaseContext : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseAnswer", Namespace="http://schemas.datacontract.org/2004/07/WcfServiceLibrary1")]
    [System.SerializableAttribute()]
    public partial class BaseAnswer : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/RegisterMe", ReplyAction="http://tempuri.org/IService1/RegisterMeResponse")]
        System.Guid RegisterMe();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/RegisterMe", ReplyAction="http://tempuri.org/IService1/RegisterMeResponse")]
        System.Threading.Tasks.Task<System.Guid> RegisterMeAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetQuestion", ReplyAction="http://tempuri.org/IService1/GetQuestionResponse")]
        System.Tuple<Client.ServiceReference1.BaseQuestion, Client.ServiceReference1.BaseContext> GetQuestion(System.Guid client);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetQuestion", ReplyAction="http://tempuri.org/IService1/GetQuestionResponse")]
        System.Threading.Tasks.Task<System.Tuple<Client.ServiceReference1.BaseQuestion, Client.ServiceReference1.BaseContext>> GetQuestionAsync(System.Guid client);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/PutAnswer", ReplyAction="http://tempuri.org/IService1/PutAnswerResponse")]
        void PutAnswer(System.Guid client, Client.ServiceReference1.BaseContext cont, Client.ServiceReference1.BaseAnswer ans);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/PutAnswer", ReplyAction="http://tempuri.org/IService1/PutAnswerResponse")]
        System.Threading.Tasks.Task PutAnswerAsync(System.Guid client, Client.ServiceReference1.BaseContext cont, Client.ServiceReference1.BaseAnswer ans);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/PutQuestion", ReplyAction="http://tempuri.org/IService1/PutQuestionResponse")]
        void PutQuestion(Client.ServiceReference1.BaseQuestion q, Client.ServiceReference1.BaseContext[] c);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/PutQuestion", ReplyAction="http://tempuri.org/IService1/PutQuestionResponse")]
        System.Threading.Tasks.Task PutQuestionAsync(Client.ServiceReference1.BaseQuestion q, Client.ServiceReference1.BaseContext[] c);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : Client.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<Client.ServiceReference1.IService1>, Client.ServiceReference1.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Guid RegisterMe() {
            return base.Channel.RegisterMe();
        }
        
        public System.Threading.Tasks.Task<System.Guid> RegisterMeAsync() {
            return base.Channel.RegisterMeAsync();
        }
        
        public System.Tuple<Client.ServiceReference1.BaseQuestion, Client.ServiceReference1.BaseContext> GetQuestion(System.Guid client) {
            return base.Channel.GetQuestion(client);
        }
        
        public System.Threading.Tasks.Task<System.Tuple<Client.ServiceReference1.BaseQuestion, Client.ServiceReference1.BaseContext>> GetQuestionAsync(System.Guid client) {
            return base.Channel.GetQuestionAsync(client);
        }
        
        public void PutAnswer(System.Guid client, Client.ServiceReference1.BaseContext cont, Client.ServiceReference1.BaseAnswer ans) {
            base.Channel.PutAnswer(client, cont, ans);
        }
        
        public System.Threading.Tasks.Task PutAnswerAsync(System.Guid client, Client.ServiceReference1.BaseContext cont, Client.ServiceReference1.BaseAnswer ans) {
            return base.Channel.PutAnswerAsync(client, cont, ans);
        }
        
        public void PutQuestion(Client.ServiceReference1.BaseQuestion q, Client.ServiceReference1.BaseContext[] c) {
            base.Channel.PutQuestion(q, c);
        }
        
        public System.Threading.Tasks.Task PutQuestionAsync(Client.ServiceReference1.BaseQuestion q, Client.ServiceReference1.BaseContext[] c) {
            return base.Channel.PutQuestionAsync(q, c);
        }
    }
}
